group 'FileManagementAPI'
version '1.0-SNAPSHOT'

//apply plugin: 'ear'
apply plugin: 'java'
apply plugin: 'war'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    providedCompile group: 'javax', name: 'javaee-api', version: '8.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile 'com.google.api-client:google-api-client:1.23.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    compile group: 'com.google.apis', name: 'google-api-services-drive', version: 'v3-rev130-1.25.0'
    compile group: 'com.sun.jersey', name: 'jersey-server', version: '1.9'
    compile group: 'com.sun.jersey.contribs', name: 'jersey-multipart', version: '1.9'
    compile group: 'org.jvnet.mimepull', name: 'mimepull', version: '1.9.3'
    compile group: 'org.jboss.resteasy', name: 'resteasy-multipart-provider', version: '3.5.1.Final'
    compile group: 'org.apache.tika', name: 'tika-core', version: '1.18'
    /*// https://mvnrepository.com/artifact/com.sun.jersey.contribs/jersey-moxy
    compile group: 'com.sun.jersey.contribs', name: 'jersey-moxy', version: '1.19.4'*/


    testCompile group: 'junit', name: 'junit', version: '4.12'
}

/*
ear {
    appDirName 'src/main/app'  // use application metadata found in this folder
    // put dependent libraries into APP-INF/lib inside the generated EAR
    libDirName 'APP-INF/lib'
    deploymentDescriptor {  // custom entries for application.xml:
//      fileName = "application.xml"  // same as the default value
//      version = "6"  // same as the default value
//      applicationName = "customear"
        initializeInOrder = true
//      displayName = "Custom Ear"  // defaults to project.name
        // defaults to project.description if not set
//      description = "My customized EAR for the Gradle documentation"
//      libraryDirectory = "APP-INF/lib"  // not needed, above libDirName setting does this
//      module("my.jar", "java")  // won't deploy as my.jar isn't deploy dependency
//      webModule("my.war", "/")  // won't deploy as my.war isn't deploy dependency
//      securityRole "admin"
//      securityRole "superadmin"
    }
}*/
